@using System
@using System.Linq
@using System.Collections.Generic

@{
  var targetFrameworkMoniker = "MonoAndroid12.0";
  var dotnetFrameworkMoniker = "net6.0-android31.0";
}

<Project Sdk="Xamarin.Legacy.Sdk">
  <PropertyGroup>
    <TargetFrameworks>@(targetFrameworkMoniker);@(dotnetFrameworkMoniker)</TargetFrameworks>
    <IsBindingProject>true</IsBindingProject>
    @if (!string.IsNullOrEmpty(Model.AssemblyName)) {
    <AssemblyName>@(Model.AssemblyName)</AssemblyName>
    <RootNamespace>@(Model.AssemblyName)</RootNamespace>
    } else {
    <AssemblyName>@(Model.NuGetPackageId)</AssemblyName>
    <RootNamespace>@(Model.NuGetPackageId)</RootNamespace>
    }
  </PropertyGroup>

  @{
      string[] nameParts = Model.Name.Split('-');
      string name_short = string.Empty;

      for(var i=0;i<nameParts.Length;i++) {
        name_short += nameParts[i].Substring(0, 1).ToUpper() + nameParts[i].Substring(1);
      }

      string key = Model.NuGetPackageId;
      
      string project_url = "https://github.com/NAXAM/braintree-android-binding";
      string license_url = "https://github.com/NAXAM/braintree-android-binding/blob/master/LICENSE";
      string icon_url = "https://avatars3.githubusercontent.com/u/3453";
  }

  <PropertyGroup>
    <PackageId>@(Model.NuGetPackageId)</PackageId>
    <Title>Braintree SDK -  @(name_short)</Title>
    <Summary>Xamarin.Android Bindings for Braintree SDK - @(name_short) @(Model.NuGetVersion) artifact=@(Model.MavenGroupId):@(Model.Name)</Summary>
    <Description>
        Xamarin.Android Bindings for Braintree SDK - @(name_short) @(Model.NuGetVersion) artifact=@(Model.MavenGroupId):@(Model.Name)
    </Description>
    <PackageTags> xamarin, Xamarin.Android, braintree, @(Model.Name), @(Model.MavenGroupId):@(Model.Name)</PackageTags>
    <Authors>tuyen</Authors>
    <Owners>tuyen</Owners>
    <Company>N/A</Company>
    <FileVersion>@(Model.NuGetVersion + "-" + DateTimeOffset.Now.ToUnixTimeSeconds())</FileVersion>
    <InformationalVersion>@(Model.NuGetVersion)</InformationalVersion>
    <AssemblyVersion>@(Model.NuGetVersion)</AssemblyVersion>
    <Copyright>Â© tuyen-vuduc. All rights reserved.</Copyright>
    <PackageProjectUrl>@(project_url)</PackageProjectUrl>
    <PackageLicenseUrl>@(license_url)</PackageLicenseUrl>
    <PackageIconUrl>@(icon_url)</PackageIconUrl>
    <PackageVersion>@(Model.NuGetVersion)</PackageVersion>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <!-- Include symbol files (*.pdb) in the built .nupkg -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>

  <PropertyGroup>
    <AndroidClassParser>class-parse</AndroidClassParser>
    <AndroidCodegenTarget>XAJavaInterop1</AndroidCodegenTarget>
  </PropertyGroup>

  <PropertyGroup>
    <!--
      =================================================================================================================
      CS warnings (from AndroidX)
    -->
    <!--
      No warnings for:
       - CS0618: 'member' is obsolete: 'text'
       - CS0109: The member 'member' does not hide an inherited member. The new keyword is not required
       - CS0114: 'function1' hides inherited member 'function2'. To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
       - CS0628: 'member' : new protected member declared in sealed class
       - CS0108: 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
       - CS0809: Obsolete member 'member' overrides non-obsolete member 'member'
    -->
    <NoWarn>0618;0109;0114;0628;0108;0809</NoWarn>
    <!--
      CS warnings (from AndroidX)
      =================================================================================================================
    -->
    <!--
      =================================================================================================================
      Xamarin.Android Bindings specific warnings
    -->
    <!--
      Ignoreable
      Performance hit for builds
      - BG8A04: <attr path="XPath" /> matched no nodes.
      - BG8A00: <remove-node path="XPath" /> matched no nodes.
    -->
    <NoWarn>08A04;BG8A00;CS0109;CS0108;CS0114</NoWarn>

    <!--
      Harmfull
      - BG8401: Skipping managed_type, due to a duplicate field, method or nested type name. (Nested type) (Java type: java_type)
      - BG8604: top ancestor Type1 not found for nested type Namespace.Type1.Type2
      - BG8C00: For type Namespace.Type1, base interface java.Interface does not exist
      - BG8700: Unknown return type java.Type1 in method Method1 in managed type Namespace.Type2.
      - BG8800: Unknown parameter type java.Type1 in method Method2 in managed type Namespace.Type2.
    -->
    <WarningsAsErrors>BG8401;BG8604;BG8C00;BG8700;BG8800</WarningsAsErrors>
    <!--
      Xamarin.Android specific warnings
      =================================================================================================================
    -->
  </PropertyGroup>

  <ItemGroup>
      @foreach (var art in @Model.MavenArtifacts)
      {
      <TransformFile Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-paramnames.xml" Condition="Exists('..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-paramnames.xml')" />
      }
  </ItemGroup>

  <ItemGroup>
    @foreach (var art in @Model.MavenArtifacts)
    {
    <JavaSourceJar
          Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-sources.jar"
          Condition="Exists('..\..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-sources.jar')"
          />
    <JavaDocJar
          Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-javadoc.jar"
          Condition="Exists('..\..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-javadoc.jar')"
          />
    }
  </ItemGroup>

  <ItemGroup>
    <_AndroidDocumentationPath Include="..\..\externals\paramnames.txt" Condition="Exists('..\..\externals\paramnames.txt')" />
    @foreach (var art in @Model.MavenArtifacts) {
    <_AndroidDocumentationPath Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-paramnames.txt" Condition="Exists('..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-paramnames.txt')" />
    }
  </ItemGroup>

  <ItemGroup>
    <None Include="@(Model.NuGetPackageId).targets" Pack="True" PackagePath="build\@(targetFrameworkMoniker)" />
    <None Include="@(Model.NuGetPackageId).targets" Pack="True" PackagePath="build\@(dotnetFrameworkMoniker)" />
    <None Include="@(Model.NuGetPackageId).targets" Pack="True" PackagePath="buildTransitive\@(targetFrameworkMoniker)" />
    <None Include="@(Model.NuGetPackageId).targets" Pack="True" PackagePath="buildTransitive\@(dotnetFrameworkMoniker)" />    
  </ItemGroup>


  @if (@Model.MavenArtifacts.Count > 0) {
  <ItemGroup>
    @foreach (var art in @Model.MavenArtifacts) {
      if (art.ProguardFile != null) {
    <None Include="..\..\@(art.ProguardFile)" Pack="True" PackagePath="proguard" />
      }
    }
  </ItemGroup>
  }

  <ItemGroup>
    <Folder Include="Additions\" />
    <Folder Include="Jars\" />
    <Folder Include="Transforms\" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\source\AssemblyInfo.cs" />
    <Compile Include="..\..\source\@(Model.MavenGroupId)\@(Model.Name)\Additions\*.cs">
        <Link>Additions/%(RecursiveDir)/%(Filename)%(Extension)</Link>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <TransformFile Include="..\..\source\@(Model.MavenGroupId)\@(Model.Name)\Transforms\*.xml">
        <Link>Transforms/%(RecursiveDir)/%(Filename)%(Extension)</Link>
    </TransformFile>
  </ItemGroup>

  <ItemGroup>
    @foreach (var art in @Model.MavenArtifacts) {
      if (1==2 && art.MavenArtifactPackaging == "aar") {
    <None Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId).aar" Pack="True" PackagePath="aar\@(targetFrameworkMoniker)" />
    <None Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId).aar" Pack="True" PackagePath="aar\@(dotnetFrameworkMoniker)" />
      }
    }
  </ItemGroup>


  @if (@Model.MavenArtifacts.Count > 0) {
  <ItemGroup>
    @foreach (var art in @Model.MavenArtifacts) {
      if (art.MavenArtifactPackaging == "aar") {
        if ((System.Environment.GetEnvironmentVariable("LOCAL_TEST_PKG") ?? "") == "true") {
    <AndroidLibrary Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId).aar" />

        } else if (art.MavenArtifactId == "data-collector") {
          // Use as a embedded AAR which will be downloaded later
    @* <AndroidLibrary Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId).aar" /> *@
        }
        else {
    <InputJar Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)\classes.jar" />
    <!-- For those artifacts with lib/ folder -->
    <InputJar
      Condition="Exists('..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)\libs\')"
      Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)\libs\*.jar"
      />
        }
      } else {
    <EmbeddedJar Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId).jar" />
      }
    }
  </ItemGroup>
  }
  <ItemGroup>
    <!-- ProjectReference -->
  </ItemGroup>

  <ItemGroup>
    <!-- ProjectReference -->
    @foreach (var dep in @Model.NuGetDependencies) {
      if (dep.IsProjectReference) {
        <ProjectReference Include="..\..\generated\@(dep.MavenArtifact.MavenGroupId).@(dep.MavenArtifact.MavenArtifactId)\@(dep.MavenArtifact.MavenGroupId).@(dep.MavenArtifact.MavenArtifactId).csproj" PrivateAssets="none" />
      }
    }
    <!-- some additional fixes -->
  </ItemGroup>

  <ItemGroup>
    <!-- PackageReference -->
    @foreach (var dep in @Model.NuGetDependencies) {
      if (!dep.IsProjectReference) {
      <PackageReference Include="@(dep.NuGetPackageId)" Version="@(dep.NuGetVersion)" PrivateAssets="none" />
      }
    }

    @switch(Model.Name) {
      case "braintree-core":
      <PackageReference Include="Xamarin.AndroidX.AppCompat" Version="1.3.1.15" PrivateAssets="none" />
      <PackageReference Include="Xamarin.AndroidX.Room.Runtime" Version="2.2.6.1" PrivateAssets="none" />
      <PackageReference Include="Xamarin.AndroidX.Work.Runtime" Version="2.6.0.2" PrivateAssets="none" />
      break;
      case "browser-switch":
      <PackageReference Include="Xamarin.AndroidX.AppCompat" Version="1.3.1.15" PrivateAssets="none" />
      <PackageReference Include="Xamarin.AndroidX.Fragment" Version="1.2.5.5" PrivateAssets="none" />
      <PackageReference Include="Xamarin.AndroidX.Browser" Version="1.0.0.1" PrivateAssets="none" />     
      break;
      case "card":
      <PackageReference Include="Xamarin.AndroidX.Annotation" Version="1.2.0.3" PrivateAssets="none" />
      <PackageReference Include="Xamarin.Kotlin.StdLib.Jdk8" Version="1.6.0.1" PrivateAssets="none" />    
      break;
      case "data-collector":
      <PackageReference Include="Xamarin.AndroidX.Annotation" Version="1.2.0.3" PrivateAssets="none" />
      break;
      case "drop-in":
      <PackageReference Include="Xamarin.Kotlin.StdLib.Jdk8" Version="1.6.0.1" PrivateAssets="none" /> 
      <PackageReference Include="Xamarin.AndroidX.Annotation" Version="1.2.0.3" PrivateAssets="none" />
      <PackageReference Include="Xamarin.AndroidX.Fragment" Version="1.2.5.5" PrivateAssets="none" />  
      <PackageReference Include="Xamarin.AndroidX.Lifecycle.Runtime.Ktx" Version="2.4.1.2" PrivateAssets="none" />  
      <PackageReference Include="Xamarin.AndroidX.CardView" Version="1.0.0.16" PrivateAssets="none" />  
      <PackageReference Include="Xamarin.GooglePlayServices.Wallet" Version="118.1.3.6" PrivateAssets="none" />  
      <PackageReference Include="Xamarin.AndroidX.RecyclerView" Version="1.2.1.7" PrivateAssets="none" />  
      <PackageReference Include="Xamarin.Google.Android.Material" Version="1.4.0.6" PrivateAssets="none" />  
      <PackageReference Include="Xamarin.AndroidX.ConstraintLayout" Version="2.0.4.3" PrivateAssets="none" />  
      break;
      case "google-pay":
      <PackageReference Include="Xamarin.Kotlin.StdLib.Jdk8" Version="1.6.0.1" PrivateAssets="none" /> 
      <PackageReference Include="Xamarin.GooglePlayServices.Wallet" Version="118.1.3.6" PrivateAssets="none" /> 
      <PackageReference Include="Xamarin.AndroidX.AppCompat" Version="1.3.1.15" PrivateAssets="none" />
      break;
      case "paypal":
      <PackageReference Include="Xamarin.AndroidX.AppCompat" Version="1.3.1.15" PrivateAssets="none" />
      break;
      case "shared-utils":
      <PackageReference Include="Xamarin.AndroidX.Annotation" Version="1.2.0.3" PrivateAssets="none" />
      <PackageReference Include="Xamarin.AndroidX.Security.SecurityCrypto" Version="1.1.0-alpha03" PrivateAssets="none" />
      break;
      case "three-d-secure":
      <PackageReference Include="Xamarin.AndroidX.AppCompat" Version="1.3.1.15" PrivateAssets="none" />
      <PackageReference Include="Xamarin.AndroidX.Lifecycle.Runtime" Version="2.3.0.1" PrivateAssets="none" />  
      <PackageReference Include="CardinalCommerce.CardinalMobileSdk.Droid" Version="2.2.6.2" PrivateAssets="none" />  
      break;
      case "union-pay":
      <PackageReference Include="Xamarin.AndroidX.Annotation" Version="1.2.0.3" PrivateAssets="none" />
      <PackageReference Include="Xamarin.Kotlin.StdLib.Jdk8" Version="1.6.0.1" PrivateAssets="none" /> 
      break;
      case "venmo":
      <PackageReference Include="Xamarin.AndroidX.AppCompat" Version="1.3.1.15" PrivateAssets="none" />
      break;
      case "card-form":
      <PackageReference Include="Xamarin.Google.Android.Material" Version="1.4.0.6" PrivateAssets="none" />  
      <PackageReference Include="Xamarin.AndroidX.RecyclerView" Version="1.2.1.7" PrivateAssets="none" />  
      <PackageReference Include="Xamarin.Android.Google.Android.Flexbox" Version="3.0.0.1" PrivateAssets="none" />  
      break;
    }
      </ItemGroup>


  @*
  <!--
  NOTE:
  Xamarin.Build.Download version set in GooglePlaySericesProjects.cshtml template is
  important for attributes in GooglePlaySericesTargets.cshtml template

  XamarinBuildDownloadAndroidAarLibrary   v >=  0.10.0
  XamarinBuildDownloadRestoreAssemblyAar  v <   0.10.0
  -->
  *@
  <ItemGroup>
    <PackageReference Include="Xamarin.Build.Download" Version="0.11.3" />
  </ItemGroup>

  <Import Project="$(MSBuildSDKExtrasTargets)" Condition="Exists('$(MSBuildSDKExtrasTargets)')" />

</Project>